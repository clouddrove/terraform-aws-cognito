---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Cognito

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-cognito

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove//terraform-aws-cognito.svg"
    url: "https://github.com/clouddrove//terraform-aws-cognito/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove//terraform-aws-cognito/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove//terraform-aws-cognito/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "Changelog"
    image: "https://img.shields.io/badge/Changelog-blue"
    url: "CHANGELOG.md"

prerequesties:
  - name: Terraform
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    version: ">= 1.6.6"

providers:
  - name: aws
    url: https://aws.amazon.com/
    version: ">= 5.31.0"

module_dependencies:
  - name: Labels Module
    url: https://github.com/clouddrove/terraform-aws-labels
    description: Provides resource tagging.

  - name: IAM Role Module
    url: https://github.com/clouddrove/terraform-aws-iam-role
    description: Provides resource iam-role.

#  description of this project
description: |-
  Terraform module to create an Cognito resource on AWS.

# How to use this project
# yamllint disable rule:line-length
usage: |-
  ### Simple Example
  Here are examples of how you can use this module in your inventory structure:
    ```hcl
    module "cognito" {
      source                                  = "./../"
  
      name                                    = "cognito"
      environment                             = "test"
      label_order                             = ["environment", "name"]
  
      enabled = true
      allow_admin_create_user_only            = false
      advanced_security_mode                  = "OFF"
      domain                                  = "test"
      mfa_configuration                       = "ON"
      allow_software_mfa_token                = true
      deletion_protection                     = "INACTIVE"
      users = {
                user01 = {
                  email = "test01@test.com"
                }
                user02 = {
                  email = "test02@test.com"
                }
              }
      user_groups = [
              { name                              = "test_group"
                description                       = "This is test group."
              }
          ]
      clients = [
        {
          name                                 = "test-client"
          callback_urls                        = ["https://test.com/signinurl"]
          generate_secret                      = true
          logout_urls                          = []
          refresh_token_validity               = 30
          allowed_oauth_flows_user_pool_client = false
          supported_identity_providers         = ["COGNITO"]
          allowed_oauth_scopes                 = ["email", "openid", "profile", "phone"]
          allowed_oauth_flows                  = ["code"]
        }
      ]
    }
    ```